import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string-array@esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-read-only-property@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-contains@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/nlp-tokenize@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/array-int32@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/array-float64@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-randu@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-floor@esm/index.mjs";var g=h,f=a,v=o;var b=function(){var t,s,i,e,n,r,h;for(1===arguments.length?i=arguments[0]:2===arguments.length&&(i=arguments[0],t=arguments[1]),s=i.length,n=1,h=0;h<s;h++)n*=i[h];return e="int32"===t?new g(n):new f(n),(r={}).dtype=t,r.shape=i,r.strides=[i[1],1],r.offset=0,r.ndims=i.length,r.length=e.length,r.nbytes=e.byteLength,r.data=e,v(r,"get",a),v(r,"set",o),r;function a(t,s){var i=this.offset+t*this.strides[0]+s*this.strides[1];return this.data[i]}function o(t,s,i){return(t=this.offset+t*this.strides[0]+s*this.strides[1])>=0&&(this.data[t]=i),this}},j=b;var w=function(){var t,s,i,e;for(t=j([this.D,this.K]),i=0;i<this.D;i++)for(e=0;e<this.K;e++)s=(this.nd.get(i,e)+this.alpha)/(this.ndSum[i]+this.K*this.alpha),t.set(i,e,s);return t},c=m.isPrimitive,y=d,S=p;var T=b;var x=u,K=l;var E=b;var V=s,z=u,L=function(t,s,i){var e,n,r,h,a,o,m,d;for(r=t.shape[0],h=t.shape[1],o=E([r,h]),e=(i-1)/i,n=1/i,m=0;m<r;m++)for(d=0;d<h;d++)a=e*t.get(m,d)+n*s.get(m,d),o.set(m,d,a);return o};var P=t,W=s,D=i,F=e,O=n,k=r,N=h,q=b,A=w,B=function(t,s){return y(s)?S(s,"alpha")&&(t.alpha=s.alpha,!c(t.alpha))?new TypeError("invalid option. `alpha` option must be a positive number. Option: `"+t.alpha+"`."):S(s,"beta")&&(t.beta=s.beta,!c(t.beta))?new TypeError("invalid option. `beta` option must be a positive number. Option: `"+t.beta+"`."):null:new TypeError("invalid argument. Options must be an object. Value: `"+s+"`.")},C=function(){var t,s,i,e;for(t=T([this.K,this.W]),i=0;i<this.K;i++)for(e=0;e<this.W;e++)s=(this.nw.get(e,i)+this.beta)/(this.nwSum[i]+this.W*this.beta),t.set(i,e,s);return t},G=function(){var t,s,i,e,n,r;for(this.z=[],n=0;n<this.D;n++){for(this.z.push([]),i=this.w[n].length,r=0;r<i;r++)s=K(x()*this.K),this.z[n].push(s);for(this.ndSum[n]=i,r=0;r<i;r++)e=this.w[n][r],t=this.z[n][r],this.nw.set(e,t,this.nw.get(e,t)+1),this.nd.set(n,t,this.nd.get(n,t)+1),this.nwSum[t]=this.nwSum[t]+1}},H=function(t,s,i){var e,n,r,h,a,o,m,d,p,u,l,g,f,v;if(!V(t))throw new TypeError("invalid argument. First argument must be a positive integer. Value: `"+t+"`.");if(!V(s))throw new TypeError("invalid argument. Second argument must be a positive integer. Value: `"+s+"`.");if(!V(i))throw new TypeError("invalid argument. Third argument must be a positive integer. Value: `"+i+"`.");for(n=this.W*this.beta,e=this.K*this.alpha,l=0;l<t;l++){for(u=0;u<this.D;u++)for(v=0;v<this.ndSum[u];v++){for(o=this.w[u][v],r=this.z[u][v],this.nw.set(o,r,this.nw.get(o,r)-1),this.nd.set(u,r,this.nd.get(u,r)-1),this.ndSum[u]-=1,this.nwSum[r]-=1,a=[],g=0;g<this.K;g++)a.push((this.nw.get(o,g)+this.beta)/(this.nwSum[g]+n)*(this.nd.get(u,g)+this.alpha)/(this.ndSum[u]+e));for(g=1;g<this.K;g++)a[g]+=a[g-1];for(f=a[this.K-1]*z(),r=0,p=0;p<this.K;p++)if(a[p]>f){r=p;break}this.nw.set(o,r,this.nw.get(o,r)+1),this.nd.set(u,r,this.nd.get(u,r)+1),this.nwSum[r]+=1,this.ndSum[u]+=1,this.z[u][v]=r}l%i==0&&l>s&&(m=this.getPhis(),h=this.getThetas(),this.phiList.push(m),this.thetaList.push(h),d=this.phiList.length,this.avgPhi=1===d?m:L(this.avgPhi,m,d),d=this.thetaList.length,this.avgTheta=1===d?h:L(this.avgTheta,h,d))}};function I(t,s){var i;for(i=0;i<t.length;i++)if(t[i]===s)return i;return-1}var J=function(t,s,i){var e,n,r,h,a,o,m,d,p,u,l,g,f,v,b,j,w;if(!D(t))throw new TypeError("invalid argument. First argument must be a string array. Value: `"+t+"`.");if(!W(s))throw new TypeError("invalid argument. Number of topics `K` must be a positive integer. Value: `"+s+"`.");if(o={},arguments.length>2&&(m=B(o,i)))throw m;for(g=t.length,h=o.alpha||50/s,a=o.beta||.1,n=[],w=[],d=0,f=0;f<g;f++)for(w.push([]),p=(l=k(t[f])).length,v=0;v<p;v++)e=l[v],-1===(u=I(n,e))?(n.push(e),w[f].push(d),d+=1):w[f].push(u);return j=n.length,F(r={},"K",s),F(r,"D",g),F(r,"W",j),F(r,"alpha",h),F(r,"beta",a),F(r,"init",G),F(r,"fit",H),F(r,"getPhis",C),F(r,"getThetas",A),F(r,"getTerms",c),r.nwSum=new N(s),r.ndSum=new N(g),r.nw=q([j,s],"int32"),r.nd=q([g,s],"int32"),r.phiList=[],r.thetaList=[],r.w=w,r.init(),r;function c(t,i){var e,r,h,a,o,m;if(!P(t)||t>=s)throw new TypeError("invalid argument. First argument must be a nonnegative integer smaller than the total number of topics. Value: `"+t+"`.");if(i){if(!W(i))throw new TypeError("invalid argument. Second argument must be a positive integer. Value: `"+i+"`.")}else i=10;for(h=[],e=[],m=0;m<i;m++){for(a=0,b=0;b<this.W;b++)(r=this.avgPhi.get(t,b))>a&&!O(e,b)&&(a=r,o=b);e.push(o),h.push({word:n[o],prob:a})}return h}};export{J as default};
