// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@v0.1.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@v0.1.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string-array@v0.1.1-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-read-only-property@v0.1.1-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-contains@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/nlp-tokenize@v0.1.1-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/array-int32@v0.1.1-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/array-float64@v0.1.1-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import{isPrimitive as d}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@v0.1.1-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-randu@v0.1.0-esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-floor@v0.1.1-esm/index.mjs";function f(){var t,s,i,e,n,r,a;for(1===arguments.length?i=arguments[0]:2===arguments.length&&(i=arguments[0],t=arguments[1]),s=i.length,n=1,a=0;a<s;a++)n*=i[a];return e="int32"===t?new h(n):new o(n),(r={}).dtype=t,r.shape=i,r.strides=[i[1],1],r.offset=0,r.ndims=i.length,r.length=e.length,r.nbytes=e.byteLength,r.data=e,m(r,"get",d),m(r,"set",p),r;function d(t,s){var i=this.offset+t*this.strides[0]+s*this.strides[1];return this.data[i]}function p(t,s,i){return(t=this.offset+t*this.strides[0]+s*this.strides[1])>=0&&(this.data[t]=i),this}}function v(){var t,s,i,e;for(t=f([this.D,this.K]),i=0;i<this.D;i++)for(e=0;e<this.K;e++)s=(this.nd.get(i,e)+this.alpha)/(this.ndSum[i]+this.K*this.alpha),t.set(i,e,s);return t}function b(t,s){return p(s)?u(s,"alpha")&&(t.alpha=s.alpha,!d(t.alpha))?new TypeError(a("invalid option. `%s` option must be a positive number. Option: `%s`.","alpha",t.alpha)):u(s,"beta")&&(t.beta=s.beta,!d(t.beta))?new TypeError(a("invalid option. `%s` option must be a positive number. Option: `%s`.","beta",t.beta)):null:new TypeError(a("invalid argument. Options argument must be an object. Value: `%s`.",s))}function j(){var t,s,i,e;for(t=f([this.K,this.W]),i=0;i<this.K;i++)for(e=0;e<this.W;e++)s=(this.nw.get(e,i)+this.beta)/(this.nwSum[i]+this.W*this.beta),t.set(i,e,s);return t}function w(){var t,s,i,e,n,r;for(this.z=[],n=0;n<this.D;n++){for(this.z.push([]),i=this.w[n].length,r=0;r<i;r++)s=g(l()*this.K),this.z[n].push(s);for(this.ndSum[n]=i,r=0;r<i;r++)e=this.w[n][r],t=this.z[n][r],this.nw.set(e,t,this.nw.get(e,t)+1),this.nd.set(n,t,this.nd.get(n,t)+1),this.nwSum[t]=this.nwSum[t]+1}}function c(t,s,i){var e,n,r,h,a,o,m,d;for(o=f([r=t.shape[0],h=t.shape[1]]),e=(i-1)/i,n=1/i,m=0;m<r;m++)for(d=0;d<h;d++)a=e*t.get(m,d)+n*s.get(m,d),o.set(m,d,a);return o}function y(t,i,e){var n,r,h,o,m,d,p,u,g,f,v,b,j,w;if(!s(t))throw new TypeError(a("invalid argument. First argument must be a positive integer. Value: `%s`.",t));if(!s(i))throw new TypeError(a("invalid argument. Second argument must be a positive integer. Value: `%s`.",i));if(!s(e))throw new TypeError(a("invalid argument. Third argument must be a positive integer. Value: `%s`.",e));for(r=this.W*this.beta,n=this.K*this.alpha,v=0;v<t;v++){for(f=0;f<this.D;f++)for(w=0;w<this.ndSum[f];w++){for(d=this.w[f][w],h=this.z[f][w],this.nw.set(d,h,this.nw.get(d,h)-1),this.nd.set(f,h,this.nd.get(f,h)-1),this.ndSum[f]-=1,this.nwSum[h]-=1,m=[],b=0;b<this.K;b++)m.push((this.nw.get(d,b)+this.beta)/(this.nwSum[b]+r)*(this.nd.get(f,b)+this.alpha)/(this.ndSum[f]+n));for(b=1;b<this.K;b++)m[b]+=m[b-1];for(j=m[this.K-1]*l(),h=0,g=0;g<this.K;g++)if(m[g]>j){h=g;break}this.nw.set(d,h,this.nw.get(d,h)+1),this.nd.set(f,h,this.nd.get(f,h)+1),this.nwSum[h]+=1,this.ndSum[f]+=1,this.z[f][w]=h}v%e==0&&v>i&&(p=this.getPhis(),o=this.getThetas(),this.phiList.push(p),this.thetaList.push(o),u=this.phiList.length,this.avgPhi=1===u?p:c(this.avgPhi,p,u),u=this.thetaList.length,this.avgTheta=1===u?o:c(this.avgTheta,o,u))}}function x(t,s){var i;for(i=0;i<t.length;i++)if(t[i]===s)return i;return-1}function S(o,m,d){var p,u,l,g,c,S,T,K,E,V,z,L,W,D,P,F,O;if(!i(o))throw new TypeError(a("invalid argument. First argument must be an array of strings. Value: `%s`.",o));if(!s(m))throw new TypeError(a("invalid argument. Number of topics must be a positive integer. Value: `%s`.",m));if(S={},arguments.length>2&&(T=b(S,d)))throw T;for(L=o.length,g=S.alpha||50/m,c=S.beta||.1,u=[],O=[],K=0,W=0;W<L;W++)for(O.push([]),E=(z=r(o[W])).length,D=0;D<E;D++)p=z[D],-1===(V=x(u,p))?(u.push(p),O[W].push(K),K+=1):O[W].push(V);return F=u.length,e(l={},"K",m),e(l,"D",L),e(l,"W",F),e(l,"alpha",g),e(l,"beta",c),e(l,"init",w),e(l,"fit",y),e(l,"getPhis",j),e(l,"getThetas",v),e(l,"getTerms",k),l.nwSum=new h(m),l.ndSum=new h(L),l.nw=f([F,m],"int32"),l.nd=f([L,m],"int32"),l.phiList=[],l.thetaList=[],l.w=O,l.init(),l;function k(i,e){var r,h,o,d,p,l;if(!t(i)||i>=m)throw new TypeError(a("invalid argument. First argument must be a nonnegative integer which is less than the total number of topics. Value: `%s`.",i));if(e){if(!s(e))throw new TypeError(a("invalid argument. Second argument must be a positive integer. Value: `%s`.",e))}else e=10;for(o=[],r=[],l=0;l<e;l++){for(d=0,P=0;P<this.W;P++)(h=this.avgPhi.get(i,P))>d&&!n(r,P)&&(d=h,p=P);r.push(p),o.push({word:u[p],prob:d})}return o}}export{S as default};
//# sourceMappingURL=index.mjs.map
